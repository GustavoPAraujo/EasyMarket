
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  name      String
  email     String    @unique
  password  String
  role      Role      @default(CLIENT)
  createdAt DateTime  @default(now())

  client    ClientProfile?
  admin     AdminProfile?

}

enum Role {
  CLIENT
  ADMIN
}

model ClientProfile {
  id     Int   @id @default(autoincrement())
  userId Int   @unique
  user   User  @relation(fields: [userId], references: [id])
  orders Order[]
  cart   Cart[]
}

model AdminProfile {
  id     Int      @id @default(autoincrement())
  userId Int      @unique
  user   User     @relation(fields: [userId], references: [id])
  store  Store?   @relation("AdminStore")
}

model Store {
  id          Int           @id @default(autoincrement())
  name        String
  description String?
  adminId     Int           @unique
  admin       AdminProfile  @relation("AdminStore", fields: [adminId], references: [id])
  createdAt   DateTime      @default(now())

  products    Product[]
}

model Product {
  id          Int       @id @default(autoincrement())
  name        String
  description String?
  price       Decimal   @db.Decimal(10,2)
  quantity    Int       @default(0)
  
  storeId     Int
  store       Store     @relation(fields: [storeId], references: [id])

  categoryId  Int?
  category    Category? @relation(fields: [categoryId], references: [id])
  
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  
  cartItems   CartItem[]
  orderItems  OrderItem[]

  images      ProductImage[]
}

model ProductImage {
  id         Int      @id @default(autoincrement())
  productId  Int
  product    Product  @relation(fields: [productId], references: [id])

  url        String
  createdAt  DateTime @default(now())
}

model Category {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  products Product[]
}

model Cart {
  id         Int             @id @default(autoincrement())
  clientId   Int             @unique
  client     ClientProfile   @relation(fields: [clientId], references: [id])
  status     CartStatus      @default(ACTIVE)
  items      CartItem[]
  createdAt  DateTime        @default(now())
  updatedAt  DateTime        @updatedAt
}

enum CartStatus {
  ACTIVE
  CHECKED_OUT
}

model CartItem {
  id         Int          @id @default(autoincrement())
  cartId     Int
  cart       Cart         @relation(fields: [cartId], references: [id])
  productId  Int
  product    Product      @relation(fields: [productId], references: [id])
  quantity   Int          @default(1)
  priceSnapshot Decimal?  @db.Decimal(10,2)
  nameSnapshot  String?
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
}

model Order {
  id          Int            @id @default(autoincrement())
  clientId    Int           
  client      ClientProfile  @relation(fields: [clientId], references: [id])

  status      OrderStatus    @default(PENDING)
  totalPrice  Decimal        @db.Decimal(10,2)
  items       OrderItem[]

  createdAt   DateTime       @default(now())
  paidAt      DateTime?
  shippedAt   DateTime?
  deliveredAt DateTime?

}

enum OrderStatus {
  PENDING
  PAID
  SHIPPED
  DELIVERED
}

model OrderItem {
  id         Int       @id @default(autoincrement())
  orderId    Int
  order      Order     @relation(fields: [orderId], references: [id])
  productId  Int
  product    Product   @relation(fields: [productId], references: [id])

  quantity   Int          
  price      Decimal   @db.Decimal(10,2)
  name       String

  createdAt  DateTime  @default(now())
}
